/*--------------------------------------------------------------
return color value from colors array
--------------------------------------------------------------*/

@function color($color){
	@if map-has-key($colors, $color) {

		$c : map-get($colors, $color);
		
		@if (type-of($c) == color){
			@return $c;	
		}
		@else if (type-of($c) == list){
			
			$function: nth($c, 1);
			$c1      : color(nth($c, 2));
			$value   : nth($c, 3);
			
			@if ($function == lighten){
				@return lighten($c1,$value);
			}
			@else if ($function == darken){
				@return darken($c1,$value);				
			}
			@warn "Unkown function: '#{$function}'";
			@return null;
		}
		@return color($c);
	}
	@warn "Unkown '#{$color}' in $colors.";
	@return null;
}

/*--------------------------------------------------------------
return screen size in px
--------------------------------------------------------------*/

@function screen($screen-size){
	@if map-has-key($screen-sizes, $screen-size) {
		@return nth(map-get($screen-sizes, $screen-size),1);
	}
	@warn "Unkown '#{$screen-size}' in $screen-sizes.";
	@return null;
}

/*--------------------------------------------------------------
get value from nested array
--------------------------------------------------------------*/

@function map-deep-get($map, $keys...) {
	@each $key in $keys {
		$map: map-get($map, $key);
	}
	@return $map;
}

/*--------------------------------------------------------------
jQuery-style extend function
--------------------------------------------------------------*/
@function map-extend($map, $maps.../*, $deep */) {
	$last: nth($maps, -1);
	$deep: $last == true;
	$max: if($deep, length($maps) - 1, length($maps));

	@for $i from 1 through $max {
		$current: nth($maps, $i);

		@if not $deep {
			$map: map-merge($map, $current);
			} @else {
				@each $key, $value in $current {

					@if type-of($value) == "map" and type-of(map-get($map, $key)) == "map" {
						$value: map-extend(map-get($map, $key), $value, true);
					}

					$map: map-merge($map, ($key: $value));
				}
			}
		}

		@return $map;
	}